BEGIN;


-- On supprime les tables si elles existent déjà car c'est un script de création
DROP TABLE IF EXISTS "user",
"role",
"quiz",
"question",
"answer",
"tag",
"level",
"quiz_has_tag",
"favorite",
"score";

-- -----------------------------------------------------
-- On crée les tables
-- -----------------------------------------------------

-- Table "user"
CREATE TABLE "user" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "pseudo" TEXT NOT NULL UNIQUE,
    "email" TEXT NOT NULL UNIQUE,
    "firstname" TEXT NOT NULL,
    "lastname" TEXT NOT NULL,
    "password" TEXT NOT NULL,
    "global_score" INTEGER NULL,
    "role_id" INTEGER NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "role"
CREATE TABLE "role" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "label" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "quiz"
CREATE TABLE "quiz" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "title" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "thumbnail" TEXT NOT NULL,
    "user_id" INTEGER NOT NULL REFERENCES "user" ("id"),
    "level_id" INTEGER NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "question"
CREATE TABLE "question" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "question" TEXT NOT NULL,
    "quiz_id" INTEGER NOT NULL REFERENCES "quiz" ("id"),
    "level_id" INTEGER NOT NULL,
    "answer_id" INTEGER NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "answer"
CREATE TABLE "answer" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "description" TEXT NOT NULL,
    "question_id" INTEGER NOT NULL REFERENCES "question" ("id"),
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "tag"
CREATE TABLE "tag" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "level"
CREATE TABLE "level" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" TEXT NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "quiz_has_tag"
CREATE TABLE "quiz_has_tag" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "quiz_id" INTEGER NOT NULL REFERENCES "quiz" ("id"),
    "tag_id" INTEGER NOT NULL REFERENCES "tag" ("id"),
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "favorite"
CREATE TABLE "favorite" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "user_id" INTEGER NOT NULL REFERENCES "user" ("id"),
    "quiz_id" INTEGER NOT NULL REFERENCES "quiz" ("id"),
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

-- Table "score"
CREATE TABLE "score" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "score" INTEGER NOT NULL,
    "user_id" INTEGER NOT NULL REFERENCES "user" ("id"),
    "quiz_id" INTEGER NOT NULL REFERENCES "quiz" ("id"),
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);


ALTER TABLE "user"
  ADD FOREIGN KEY ("role_id") REFERENCES "role" ("id");

ALTER TABLE "quiz"
  ADD FOREIGN KEY ("level_id") REFERENCES "level" ("id");

ALTER TABLE "question"
  ADD FOREIGN KEY ("level_id") REFERENCES "level" ("id");

ALTER TABLE "question"
  ADD FOREIGN KEY ("answer_id") REFERENCES "answer" ("id");


COMMIT;